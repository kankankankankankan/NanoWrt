name: FriendlyWrt for NanoPi-M4

on:
  repository_dispatch:
  push:
    branches: 
      - master
    paths:
      - '.github/workflows/m4_friendlywrt.yml'
      - 'app_config.seed'
      - 'scripts/*.sh'

jobs:

  build:
    
    runs-on: ubuntu-latest
    if: github.repository == 'vinewx/NanoWrt'
    
    steps:
      
      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Initialization Environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo apt-get update
          sudo apt-get -y install bc build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk
          
      - name: Install Repo
        run: |
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          
      - name: Init Source
        run: |
          mkdir friendlywrt-rk3399
          cd friendlywrt-rk3399
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m rk3399.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle
          repo sync -c --no-tags --no-clone-bundle -j8

      - name: Mods
        run: |
          chmod +x scripts/*
          cd friendlywrt-rk3399
          . ../scripts/pure_config.sh
          cat ../app_config.seed >> configs/config_rk3399
          sed -i 's/dnsmasq /dnsmasq-full /' friendlywrt/include/target.mk
          cd friendlywrt
          cp ../../scripts/settings.sh package/base-files/files/root/
          chmod +x package/base-files/files/root/settings.sh
          sed -i '/touch/i\    /root/settings.sh' package/base-files/files/etc/rc.local
          sed -i '/touch/i\    reboot' package/base-files/files/etc/rc.local
          rm -rf .git
          git init
          git remote add -f origin https://github.com/coolsnowwolf/lede.git
          git config core.sparsecheckout true
          echo "autocore" >> .git/info/sparse-checkout
          git pull origin master
          git branch --set-upstream-to=origin/master master
          . ../../scripts/enable_autocore.sh
          cd package
          git clone https://github.com/maxlicheng/luci-app-unblockmusic.git
          cd luci-app-unblockmusic
          git checkout bd05512a47dcbf25d62aaaab4d41808792339b16
          cd ../
          cd lean
          git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git
          cd ../../
          mkdir -p package/luci-lib-docker
          wget https://raw.githubusercontent.com/lisaac/luci-lib-docker/master/Makefile -O package/luci-lib-docker/Makefile
          mkdir -p package/luci-app-dockerman
          wget https://raw.githubusercontent.com/lisaac/luci-app-dockerman/master/Makefile -O package/luci-app-dockerman/Makefile
          mkdir -p package/luci-app-diskman
          wget https://raw.githubusercontent.com/lisaac/luci-app-diskman/master/Makefile -O package/luci-app-diskman/Makefile
          mkdir -p package/parted
          wget https://raw.githubusercontent.com/lisaac/luci-app-diskman/master/Parted.Makefile -O package/parted/Makefile
          
      - name: Install OpenClash
        run: |
          cd friendlywrt-rk3399/friendlywrt
          mkdir package/luci-app-openclash
          cd package/luci-app-openclash
          git init
          git remote add -f origin https://github.com/vernesong/OpenClash.git
          git config core.sparsecheckout true
          echo "luci-app-openclash" >> .git/info/sparse-checkout
          git pull origin master
          git branch --set-upstream-to=origin/master master
          cd luci-app-openclash/tools/po2lmo
          make && sudo make install

      - name: Install Clash Binaries
        run: |
          cd friendlywrt-rk3399/friendlywrt/package/base-files/files
          mkdir -p etc/openclash/core
          wget -qO- https://github.com/Dreamacro/clash/releases/download/v0.19.0/clash-linux-armv8-v0.19.0.gz | gunzip -c > etc/openclash/core/clash
          chmod +x etc/openclash/core/clash

      - name: Clean Feeds
        run: |
          cd friendlywrt-rk3399/friendlywrt
          ./scripts/feeds clean -a
          sed -i '/luci/Id;' feeds.conf.default
          sed -i '/routing/i\src-git luci https://github.com/coolsnowwolf/luci' feeds.conf.default

      - name: Build FriendlyWrt
        run: |
          cd friendlywrt-rk3399
          sed -i 's/set -eu/set -u/' scripts/mk-friendlywrt.sh
          ./build.sh nanopi_m4.mk
          cp device/friendlyelec/rk3399/nanopi_m4.mk .current_config.mk
          pushd scripts/sd-fuse
          wget https://github.com/vinewx/NanoWrt/releases/download/eflasher/emmc-flasher-images.tgz
          mkdir eflasher
          tar xzvf emmc-flasher-images.tgz -C eflasher --strip-components=1
          popd
          sed -i '/download_img /d' scripts/sd-fuse/mk-emmc-image.sh
          sudo ./build.sh emmc-img
      
      - name: Zip Files
        run: |
          gzip friendlywrt-rk3399/out/*.img

      - name: Assemble Artifact
        id: assemble_artifact
        run: |
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv friendlywrt-rk3399/out/*img* ./artifact/
          cp friendlywrt-rk3399/friendlywrt/.config ./artifact/
          file_name="FriendlyWrt_$(date +%Y%m%d)_NanoPi-M4_arm64"
          echo "##[set-output name=file_name;]$file_name"

      - name: Upload Artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ steps.assemble_artifact.outputs.file_name }}
          path: ./artifact/
